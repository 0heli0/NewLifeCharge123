<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newlife.charge.dao.StationTimePriceMapper">

    <sql id="Base_Column_List">
        id, station_id, time_no, time_begin, time_end, increase, create_time
    </sql>

    <select id="get" parameterType="java.lang.Integer" resultType="com.newlife.charge.core.domain.StationTimePrice">
        select 
        <include refid="Base_Column_List" />
        from tb_station_time_price
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="getByStationId" parameterType="java.lang.Integer" resultType="com.newlife.charge.core.domain.StationTimePrice">
        select
        <include refid="Base_Column_List" />
        from tb_station_time_price
        where station_id = #{stationId,jdbcType=INTEGER} order by time_no asc
    </select>

    <delete id="delete" parameterType="java.lang.Integer">
        delete from tb_station_time_price
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"  parameterType="com.newlife.charge.core.domain.StationTimePrice">
        insert into tb_station_time_price (id, station_id, time_no, 
            time_begin, time_end, increase, 
            create_time)
        values (#{id,jdbcType=INTEGER}, #{stationId,jdbcType=INTEGER}, #{timeNo,jdbcType=INTEGER}, 
            #{timeBegin,jdbcType=TIME}, #{timeEnd,jdbcType=TIME}, #{increase,jdbcType=INTEGER}, 
            #{createTime,jdbcType=TIMESTAMP})
    </insert>

    <update id="update" parameterType="com.newlife.charge.core.domain.StationTimePrice">
        update tb_station_time_price
        <set>
            <if test="stationId != null">
                station_id = #{stationId,jdbcType=INTEGER},
            </if>
            <if test="timeNo != null">
                time_no = #{timeNo,jdbcType=INTEGER},
            </if>
            <if test="timeBegin != null">
                time_begin = #{timeBegin,jdbcType=TIME},
            </if>
            <if test="timeEnd != null">
                time_end = #{timeEnd,jdbcType=TIME},
            </if>
            <if test="increase != null">
                increase = #{increase,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="getOneByStationId" parameterType="java.lang.Integer" resultType="com.newlife.charge.core.domain.StationTimePrice">
        select *
        from tb_station_time_price
        where station_id = #{stationId,jdbcType=INTEGER}
        order by time_no desc limit 1
    </select>

    <select id="getByQuery"  resultType="com.newlife.charge.core.domain.StationTimePrice">
        select *
        from tb_station_time_price
        <where>
            <if test="stationId != null">
                and station_id = #{stationId,jdbcType=INTEGER}
            </if>
            <if test="timeNo != null">
                and time_no = #{timeNo,jdbcType=INTEGER}
            </if>
        </where>
    </select>

    <select id="selectStationTime" resultType="com.newlife.charge.core.domain.StationTimePrice">
        select *
        from tb_station_time_price
        where station_id = #{stationId,jdbcType=INTEGER}
        and ((time_begin &lt;= #{timeBegin,jdbcType=TIME} and  time_end &gt; #{timeBegin,jdbcType=TIME})
        or (time_begin &lt; #{timeEnd,jdbcType=TIME} and  time_end &gt;= #{timeEnd,jdbcType=TIME})
        or (time_begin &gt;= #{timeBegin,jdbcType=TIME} and  time_end &lt;= #{timeEnd,jdbcType=TIME}))
    </select>

    <select id="getIncrease" resultType="com.newlife.charge.core.domain.StationTimePrice">
        select *
        from tb_station_time_price
        where station_id = #{stationId,jdbcType=INTEGER} group by increase
    </select>

    <delete id="deleteByTimeNoAndStationId">
        delete from tb_station_time_price
        where station_id = #{stationId,jdbcType=INTEGER} and time_no = #{timeNo,jdbcType=INTEGER}
    </delete>
    
    <select id="getNowTimePrice" parameterType="java.lang.Integer"
            resultType="com.newlife.charge.core.domain.StationTimePrice">
        SELECT
        <include refid="Base_Column_List" />
        FROM
        tb_station_time_price
        WHERE
        station_id = 1
        AND time_begin &lt;= CURTIME( ) AND time_end &gt;= CURTIME( )
        ORDER BY
        create_time DESC
        LIMIT 1;
    </select>
</mapper>