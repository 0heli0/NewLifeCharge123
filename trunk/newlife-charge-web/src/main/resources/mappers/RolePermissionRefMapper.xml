<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newlife.charge.dao.RolePermissionRefMapper">

    <sql id="Base_Column_List">
        id, role_id, permission_id, create_time
    </sql>

    <select id="get" parameterType="java.lang.Integer" resultType="com.newlife.charge.core.domain.RolePermissionRef">
        select 
        <include refid="Base_Column_List" />
        from tb_role_permission_ref
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="delete" parameterType="java.lang.Integer">
        delete from tb_role_permission_ref
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"  parameterType="com.newlife.charge.core.domain.RolePermissionRef">
        insert into tb_role_permission_ref (id, role_id, permission_id, 
            create_time)
        values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{permissionId,jdbcType=INTEGER}, 
            #{createTime,jdbcType=TIMESTAMP})
    </insert>

    <update id="update" parameterType="com.newlife.charge.core.domain.RolePermissionRef">
        update tb_role_permission_ref
        <set>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="permissionId != null">
                permission_id = #{permissionId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>


    <select id="getByRoleId" resultType="RolePermissionEx">
        select rp.id,rp.role_id,rp.permission_id,pi.permission_sname
        from tb_role_permission_ref rp
        LEFT JOIN tb_permission_info pi on pi.id=rp.permission_id
        <where>
            <if test="roleId != null">
                rp.role_id = #{roleId}
            </if>
        </where>
    </select>

    <select id="getByRoleIdList" resultType="RolePermissionEx">
        select rp.id,rp.role_id,rp.permission_id,pi.permission_sname
        from tb_role_permission_ref rp
        LEFT JOIN tb_permission_info pi on pi.id=rp.permission_id
        <where>
            <if test="roleIdList != null and roleIdList.size>0">
                 rp.role_id in
                <foreach collection="roleIdList" index="index" item="item" open="(" separator="," close=")">
                    ${item}
                </foreach>
            </if>
        </where>
    </select>




    <delete id="deleteByRoleId">
        delete from tb_role_permission_ref where role_id = #{roleId,jdbcType=INTEGER}
    </delete>


    <delete id="deleteByRoleIds">
        delete from tb_role_permission_ref  where role_id in
        <foreach collection="roleIds" index="index" item="item" open="(" separator="," close=")">
            ${item}
        </foreach>
    </delete>


</mapper>